Index: app/src/main/java/it/polito/students/showteamdetails/routers/Routers.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.polito.students.showteamdetails.routers\r\n\r\nimport android.util.Log\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.LaunchedEffect\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.remember\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport it.polito.students.showteamdetails.EditPaneWithCamera\r\nimport it.polito.students.showteamdetails.MainActivity\r\nimport it.polito.students.showteamdetails.Utils\r\nimport it.polito.students.showteamdetails.view.AboutUs\r\nimport it.polito.students.showteamdetails.view.AfterQRScanning\r\nimport it.polito.students.showteamdetails.view.ChatPage\r\nimport it.polito.students.showteamdetails.view.HomeChatsPage\r\nimport it.polito.students.showteamdetails.view.HomeTeamsPage\r\nimport it.polito.students.showteamdetails.view.ModifyTaskPage\r\nimport it.polito.students.showteamdetails.view.NewChatPage\r\nimport it.polito.students.showteamdetails.view.ShareTeamPage\r\nimport it.polito.students.showteamdetails.view.StatisticsPage\r\nimport it.polito.students.showteamdetails.view.TeamPage\r\nimport it.polito.students.showteamdetails.view.ViewTaskPage\r\nimport it.polito.students.showteamdetails.viewmodel.TeamListViewModel\r\n\r\n\r\n@Composable\r\nfun HomeRouter(\r\n    navController: NavHostController,\r\n    applicationContext: MainActivity,\r\n    routerActions: RouterActions,\r\n    teamListVm: TeamListViewModel\r\n) {\r\n\r\n    NavHost(navController = navController, startDestination = Utils.RoutesEnum.HOME_TEAM.name) {\r\n\r\n\r\n        // HOME CHAT\r\n        composable(Utils.RoutesEnum.HOME_CHAT.name) {\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.HOME_CHAT.name)\r\n\r\n            HomeChatsPage(routerActions, teamListVm = teamListVm)\r\n        }\r\n\r\n        // CHAT PAGE\r\n        composable(\"${Utils.RoutesEnum.CHAT_PAGE.name}/{chatId}\") {\r\n            Log.d(\"HomeRouter\", \"${Utils.RoutesEnum.CHAT_PAGE.name}/{chatId}\")\r\n            val chatId = it.arguments?.getString(\"chatId\")?.toLongOrNull()\r\n\r\n            val openChat = (teamListVm.individualChats.toList()+teamListVm.teamList.map { it.groupChat }).find { it.id == chatId!! }\r\n\r\n            ChatPage(openChat!!, teamListVm = teamListVm, routerActions)\r\n        }\r\n\r\n        composable(Utils.RoutesEnum.NEW_CHAT_PAGE.name) {\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.NEW_CHAT_PAGE.name)\r\n\r\n            NewChatPage(teamListVm = teamListVm, routerActions = routerActions)\r\n        }\r\n\r\n        // TEAMS\r\n        composable(Utils.RoutesEnum.HOME_TEAM.name) {\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.HOME_TEAM.name)\r\n\r\n            val navBackStackEntry by navController.currentBackStackEntryAsState()\r\n            val backStackEntryCount = navBackStackEntry?.savedStateHandle?.get<Int>(\"backStackEntryCount\") ?: 0\r\n\r\n            navBackStackEntry?.savedStateHandle?.set(\"backStackEntryCount\", backStackEntryCount + 1)\r\n            Log.d(\"HomeRouter\", \"numero elementi presenti: $backStackEntryCount\")\r\n\r\n\r\n            HomeTeamsPage(routerActions, teamListVm = teamListVm)\r\n        }\r\n\r\n        composable(\"${Utils.RoutesEnum.TEAM_PAGE.name}/{teamId}\") { backStackEntry ->\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.TEAM_PAGE.name)\r\n\r\n            val teamId = backStackEntry.arguments?.getString(\"teamId\")?.toLongOrNull()\r\n            val teamVm = teamListVm.teamList.find { it.teamField.id == teamId }\r\n\r\n            if (teamVm != null && teamVm.selectedTask == null) {\r\n                TeamPage(\r\n                    teamVm = teamVm,\r\n                    selectTask = teamVm::selectTask,\r\n                    backStackEntry,\r\n                    routerActions\r\n                )\r\n            }\r\n        }\r\n\r\n        composable(Utils.RoutesEnum.ADD_TEAM.name) {\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.ADD_TEAM.name)\r\n\r\n            val newTeam = remember { teamListVm.getEmptyTeamViewModel() }\r\n            LaunchedEffect(Unit) {\r\n                newTeam.enterCreatingMode()\r\n                teamListVm.selectTeam(newTeam)\r\n            }\r\n\r\n            EditPaneWithCamera(\r\n                applicationContext,\r\n                isTeamPage = true,\r\n                teamVm = newTeam,\r\n                routerActions = routerActions,\r\n                teamListVm = teamListVm\r\n            )\r\n        }\r\n\r\n        composable(\"${Utils.RoutesEnum.MODIFY_TEAM.name}/{teamId}\") { backStackEntry ->\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.MODIFY_TEAM.name)\r\n\r\n            val teamId = backStackEntry.arguments?.getString(\"teamId\")?.toLongOrNull()\r\n            val teamVm = teamListVm.teamList.find { it.teamField.id == teamId }\r\n\r\n            if (teamVm != null) {\r\n                teamListVm.selectTeam(teamVm)\r\n                teamVm.enterEditingMode()\r\n\r\n                EditPaneWithCamera(\r\n                    applicationContext,\r\n                    isTeamPage = true,\r\n                    teamVm = teamVm,\r\n                    routerActions = routerActions,\r\n                    teamListVm = teamListVm\r\n                )\r\n            }\r\n        }\r\n\r\n        composable(\"${Utils.RoutesEnum.TEAM_STATISTICS.name}/{teamId}\") {backStackEntry->\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.TEAM_STATISTICS.name)\r\n            val teamId = backStackEntry.arguments?.getString(\"teamId\")?.toLongOrNull()\r\n            val teamVm = teamListVm.teamList.find { it.teamField.id == teamId }\r\n\r\n            if (teamVm != null) {\r\n                StatisticsPage()\r\n            }\r\n        }\r\n\r\n        composable(\"${Utils.RoutesEnum.TEAM_QRCODE_SHARE_PAGE.name}/{teamId}\") { backStackEntry ->\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.TEAM_QRCODE_SHARE_PAGE.name)\r\n\r\n            val teamId = backStackEntry.arguments?.getString(\"teamId\")?.toLongOrNull()\r\n            val teamVm = teamListVm.teamList.find { it.teamField.id == teamId }\r\n\r\n            if (teamVm != null) {\r\n                ShareTeamPage(teamVm)\r\n            }\r\n        }\r\n\r\n        composable(\"${Utils.RoutesEnum.TEAM_CONFIRM_JOIN.name}/{teamId}\") { backStackEntry ->\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.TEAM_CONFIRM_JOIN.name)\r\n\r\n            val teamId = backStackEntry.arguments?.getString(\"teamId\")?.toLongOrNull()\r\n            val teamVm = teamListVm.teamList.find { it.teamField.id == teamId }\r\n\r\n            if (teamVm != null) {\r\n                AfterQRScanning(teamVm)\r\n            }\r\n        }\r\n\r\n        // TASK\r\n        composable(Utils.RoutesEnum.VIEW_TASK.name) { backStackEntry ->\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.VIEW_TASK.name)\r\n\r\n            val teamVm = teamListVm.selectedTeam\r\n            val taskVm = teamVm?.selectedTask\r\n\r\n            if (teamVm != null && taskVm != null) {\r\n                teamVm.exitEditingMode()\r\n                teamVm.exitCreatingMode()\r\n                ViewTaskPage(\r\n                    taskVm,\r\n                    teamVm,\r\n                    applicationContext,\r\n                    teamVm::selectTask\r\n                )\r\n            }\r\n        }\r\n\r\n        composable(Utils.RoutesEnum.MODIFY_TASK.name) { backStackEntry ->\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.MODIFY_TASK.name)\r\n\r\n            val teamVm = teamListVm.selectedTeam\r\n            val taskVm = teamVm?.selectedTask\r\n            if (teamVm != null && taskVm != null && (taskVm.isEditing || taskVm.isCreating)) {\r\n                ModifyTaskPage(teamVm, applicationContext, teamVm::selectTask)\r\n            }\r\n        }\r\n\r\n        // PROFILE\r\n        composable(Utils.RoutesEnum.PROFILE.name) {\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.PROFILE.name)\r\n\r\n        }\r\n\r\n//        composable(Utils.RoutesEnum.qRCodeScan.name){ QRCodeScanPage() } // pagina QR code scan\r\n        composable(Utils.RoutesEnum.ABOUTUS.name) {\r\n            Log.d(\"HomeRouter\", Utils.RoutesEnum.ABOUTUS.name)\r\n\r\n            AboutUs()\r\n        }\r\n//        composable(Utils.RoutesEnum.REQUESTS.name) { Requests() }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/it/polito/students/showteamdetails/routers/Routers.kt b/app/src/main/java/it/polito/students/showteamdetails/routers/Routers.kt
--- a/app/src/main/java/it/polito/students/showteamdetails/routers/Routers.kt	
+++ b/app/src/main/java/it/polito/students/showteamdetails/routers/Routers.kt	
@@ -12,6 +12,7 @@
 import it.polito.students.showteamdetails.EditPaneWithCamera
 import it.polito.students.showteamdetails.MainActivity
 import it.polito.students.showteamdetails.Utils
+import it.polito.students.showteamdetails.entity.RoleEnum
 import it.polito.students.showteamdetails.view.AboutUs
 import it.polito.students.showteamdetails.view.AfterQRScanning
 import it.polito.students.showteamdetails.view.ChatPage
@@ -19,10 +20,12 @@
 import it.polito.students.showteamdetails.view.HomeTeamsPage
 import it.polito.students.showteamdetails.view.ModifyTaskPage
 import it.polito.students.showteamdetails.view.NewChatPage
+import it.polito.students.showteamdetails.view.ProfileScreen
 import it.polito.students.showteamdetails.view.ShareTeamPage
 import it.polito.students.showteamdetails.view.StatisticsPage
 import it.polito.students.showteamdetails.view.TeamPage
 import it.polito.students.showteamdetails.view.ViewTaskPage
+import it.polito.students.showteamdetails.viewmodel.ProfileFormViewModel
 import it.polito.students.showteamdetails.viewmodel.TeamListViewModel
 
 
@@ -193,6 +196,8 @@
         composable(Utils.RoutesEnum.PROFILE.name) {
             Log.d("HomeRouter", Utils.RoutesEnum.PROFILE.name)
 
+            ProfileScreen(applicationContext = applicationContext, vm = ProfileFormViewModel(Utils.memberAccessed), routerActions = routerActions , teamListVm = teamListVm)
+
         }
 
 //        composable(Utils.RoutesEnum.qRCodeScan.name){ QRCodeScanPage() } // pagina QR code scan
